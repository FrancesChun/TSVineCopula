% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sim-d-variate-mkp-mvine.R
\name{sim_svine}
\alias{sim_svine}
\title{Simulate S-vine d-variate Markov order k-1 time series}
\usage{
sim_svine(
  n,
  vinematrix,
  fam,
  param1,
  param2,
  d = 2,
  seed = FALSE,
  ntrunc = 0,
  varname = numeric(0),
  iprint = FALSE,
  trunc = 0,
  thin = 1
)
}
\arguments{
\item{n}{length of time series x and y.}

\item{vinematrix}{d-variate Markov order k S-vine matrix, d(k+1)xd(k+1)}

\item{fam}{d(k+1)xd(k+1)  family code matrix (VineCopula copula family index) .
where the diagonal is in the order of
x1 - y1 - x2 - y2 - ... - xk, yk
Note: we assume CX1Y1 = CX2Y2 --> fam[1,2] = fam[1,4]}

\item{param1}{d(k+1)xd(k+1)  parameter matrix (VineCopula first copula parameter)
param1[l,j] for tree l, variable j.
Note: we assume CX1Y1 = CX2Y2 --> param1[1,2] = param1[1,4]}

\item{param2}{d(k+1)xd(k+1)  parameter matrix (VineCopula second copula parameter)
param2[l,j] for tree l, variable j; 0 if not needed.}

\item{d}{numeric, number of variables, must be >=2, default is 2}

\item{seed}{random number seed, default no seed}

\item{trunc}{numeric; number of sample points (starting from the beginning)
to remove, default 0 (i.e. keep all data points)}

\item{thin}{numeric; keep every thin(th) points in the dataset;
Ex: if thin = 2, then we keep 1st, 3rd, 5th, 7th ... data points
default 1 (i.e. keep all data points)}
}
\value{
bivariate time series of length n
}
\description{
Simulate S-vine d-variate Markov order k-1 time series
}
\examples{
## Example 1: 4-variate Markov order 1, all Gumbel
d2_mk1 = matrix(c(1,1,1,3,
                  0,2,2,1,
                  0,0,3,2,
                  0,0,0,4),
                nrow = 4, byrow = TRUE)
apar1 = matrix(c(0,2,2.1,2,
                 0,0,1.5,1.4,
                 0,0,0,1.2,
                 0,0,0,0),4,4, byrow=T)
apar2 = matrix(0,4,4)
afam4 = matrix(4,4,4) # all Gumbel

mvine_dat = sim_svine(5000,d2_mk1,afam4,apar1,apar2, seed = 123)

testfit = fit_svine(dat = mvine_dat, family, familyset = c(0,1,4,5,14))
rotate_180(testfit[[1]]$Matrix)
rotate_180(testfit[[1]]$family)
rotate_180(testfit[[1]]$par)

## Example 2: Bivariate Markov order 2, all Gumbel
d2_mk2 = bimvine_mk(2)
apar1 = matrix(c(0, 2, 2.5, 2,   2.5, 2,
                 0, 0, 1.5, 1.3, 1.5, 1.3,
                 0, 0, 0,   1.2, 1.6, 1.2,
                 0, 0, 0,   0,   1.1, 1.1,
                 0, 0, 0,   0,   0,   1.1,
                 0, 0, 0,   0,   0,   0),
               6,6, byrow=T)
apar2 = matrix(0,6,6)
afam4 = matrix(4,6,6) # all Gumbel

# default d=2
mvine_dat = sim_svine(5000,d2_mk2,afam4,apar1,apar2, seed = 123)

testfit = fit_svine(dat = mvine_dat, k=2, familyset = c(0,1,4,5,14))
}
