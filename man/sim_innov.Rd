% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sim-d-variate-mkp-innov.R
\name{sim_innov}
\alias{sim_innov}
\title{Simulate d-variate Markov order k time series based on Innovation model}
\usage{
sim_innov(n, innov.RVine, uni.Rvine, trunc = 0, thin = 1, seed = FALSE)
}
\arguments{
\item{n}{number of bivariate observations simulated}

\item{innov.RVine}{RVineMatrix() object for the innovations}

\item{uni.Rvine}{a list of d RVineMatrix() objects for each of the d univariate
time series; d>=2}

\item{trunc}{numeric; number of sample points (starting from the beginning)
to remove, default 0 (i.e. keep all data points)}

\item{thin}{numeric; keep every thin(th) points in the dataset;
Ex: if thin = 2, then we keep 1st, 3rd, 5th, 7th ... data points
default 1 (i.e. keep all data points)}

\item{seed}{random number seed, default no seed}
}
\value{
simulated time series (nxd matrix)
}
\description{
simulate d-variate time series based on innovations
NOT initializing from a stationary state
}
\examples{
var1apar1 = matrix(c(0, 2,2,2, 0,0, 1.5,1.5, 0,0,0,1.2, 0,0,0,0),4,4, byrow=T)
var1apar2 = matrix(0,4,4)
var1afam4 = matrix(4,4,4) # all Gumbel

var2apar1 = matrix(c(0, 1.5,1.5,1.5, 0,0, 1.7,1.7, 0,0,0,2, 0,0,0,0),4,4, byrow=T)
var2apar2 = matrix(0,4,4)
var2afam4 = matrix(4,4,4) # all Gumbel

var3apar1 = matrix(c(0, 1.6,1.6,1.6, 0,0, 1.8,1.8, 0,0,0,2, 0,0,0,0),4,4, byrow=T)
var3apar2 = matrix(0,4,4)
var3afam4 = matrix(4,4,4) # all Gumbel

innovama   = matrix(c(1, 1, 1,
                      0, 2, 2,
                      0, 0, 3), 3, 3, byrow = T)
innovapar1 = matrix(c(0, 0.5,0.5, 0,0, 0.3, 0,0,0),3,3, byrow=T)
innovapar2 = matrix(0,3,3)
innovafam3 = matrix(1,3,3) # all Gaussian

testing = sim_innov(n = 5000, innov.RVine = RVineMatrix(Matrix = innovama, family = innovafam3,
                                                        par = innovapar1, par2 = innovapar2),
                    uni.Rvine = list(var1_RVM = RVineMatrix(Matrix = dvine(4), family = var1afam4,
                                                            par = var1apar1, par2 = var1apar2),
                                     var2_RVM = RVineMatrix(Matrix = dvine(4), family = var2afam4,
                                                            par = var2apar1, par2 = var2apar2),
                                     var3_RVM = RVineMatrix(Matrix = dvine(4), family = var3afam4,
                                                            par = var3apar1, par2 = var3apar2)))

testing_fit = fit_innov(dat = testing$dat, k = 3, familyset = c(0,1,4,5,14))

test_uni = testing_fit$univariate_fit
test_innov = testing_fit$innov_fit

test_innov$Matrix
test_innov$family
test_innov$par

test_uni[[1]]$fitted_cop[[1]]$family
test_uni[[1]]$fitted_cop[[1]]$par
test_uni[[2]]$fitted_cop[[1]]$family
test_uni[[2]]$fitted_cop[[1]]$par
}
